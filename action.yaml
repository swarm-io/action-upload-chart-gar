name: 'Upload Released Helm Chart to GAR'
description: 'Extracts a helm chart from a release and uploads it to GAR. This is designed to be run on a release trigger.'
inputs:
  token:
    description: 'Github token to use'
    required: false
    default: ${{ github.token }}
  tag:
    description: 'Release tag to fetch chart from'
    required: false
    default: ${{ github.event.release.tag_name }}
  credentials-json:
    description: 'gcloud service account credentials json'
    required: true
  project-id:
    description: 'gcloud project id'
    required: true
  region:
    description: 'artifact registry region'
    required: false
    default: 'us-west1'
  repository:
    description: 'artifact registry repository'
    required: false
    default: 'charts'
  release-asset-name:
    description: 'the asset name containing the chart, must be a tar file'
    required: false
    default: 'chart.tgz'
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-id }}
runs:
  using: "composite"
  steps:
    - name: Fetch release
      uses: robinraju/release-downloader@v1.3
      with:
        repository: ${{ github.repository }}
        tag: ${{ inputs.tag }}
        fileName: ${{ inputs.release-asset-name }}
        token: ${{ inputs.token }}
    - id: auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.credentials-json }}
    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ inputs.project-id }}
    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.7.2
    - id: repo-urls
      shell: bash
      run: |
        baseUrl="${{ inputs.region }}-docker.pkg.dev"
        fullUrl="$baseUrl/${{ inputs.project-id }}/${{ inputs.repository }}"
        echo "baseUrl is: $baseUrl"
        echo "fullUrl is: $fullUrl"
        echo "::set-output name=baseUrl::$baseUrl"
        echo "::set-output name=fullUrl::$fullUrl"
    - name: Push chart
      env:
        HELM_EXPERIMENTAL_OCI: 1
      shell: bash
      run: |
        tar -zxvf ${{ inputs.release-asset-name }} && rm ${{ inputs.release-asset-name }}
        packagepath=$(ls | grep *.tgz)
        latest=${packagepath%-[0-9]*}-latest
        cp $packagepath $latest
        gcloud auth application-default print-access-token | helm registry login -u oauth2accesstoken --password-stdin https://${{ steps.repo-urls.outputs.baseUrl }}
        echo "pushing package $packagepath to ${{ steps.repo-urls.outputs.fullUrl }}"
        helm push $packagepath oci://${{ steps.repo-urls.outputs.fullUrl }}
        echo "pushing package $latest to ${{ steps.repo-urls.outputs.fullUrl }}"
        helm push $latest oci://${{ steps.repo-urls.outputs.fullUrl }}